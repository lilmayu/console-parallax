plugins {
    id 'java'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
    id 'jacoco'
    id 'jacoco-report-aggregation'
}

group = 'dev.mayuna'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    // Jetbrains Annotations
    implementation 'org.jetbrains:annotations:24.0.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.+'
    annotationProcessor 'org.projectlombok:lombok:1.18.+'
    testCompileOnly 'org.projectlombok:lombok:1.18.+'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.+'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

// Java 8
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

tasks.jacocoTestReport {
    reports {
        csv.required = true
    }
}

// == Quick tasks == //

task publishCloseAndRelease() {
    dependsOn 'publishToSonatype'
    dependsOn 'closeAndReleaseSonatypeStagingRepository'
}

shadowJar {

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// == Maven publishing == //

publishing {

    publications {
        shadow(MavenPublication) {
            groupId = 'dev.mayuna'
            artifactId = 'console-parallax'
            version = getVersion()
            from components.java

            pom {
                name = 'console-parallax'
                description = 'A simple Java library handling console input and treating it as a CLI'
                url = 'https://github.com/lilmayu/console-parallax'

                scm {
                    connection = 'scm:https://github.com/lilmayu/console-parallax'
                    developerConnection = 'scm:git:https://github.com/lilmayu/console-parallax.git'
                    url = 'https://github.com/lilmayu/console-parallax'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/license/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'mayuna'
                        name = 'Marek Lof'
                        email = 'uwulilmayu@gmail.com'
                    }
                }
            }
        }
    }

    publishing {
        repositories {
            maven {
                credentials {
                    username = "$ossrhUsername"
                    password = "$ossrhPassword"
                }

                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
        }
    }
}

signing {
    sign publishing.publications.shadow
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = "$ossrhUsername"
            password = "$ossrhPassword"
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

shadowJar.dependsOn javadocJar
shadowJar.dependsOn sourcesJar
shadowJar.dependsOn jar

components.java.withVariantsFromConfiguration(configurations.shadowRuntimeElements) {
    skip()
}